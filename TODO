octree for voxel image
kdtree for 2d or generic
quadtree

more filter shapes

some Hash impls might lose precision

many more distance functions

mesh trait could be defined in general (non-3d) and have another trait for the 3D version

rename either the half edge or IsSearchableMesh methods, so the names match

make mesh traits generic on the face type

remove all files from src/ toplevel and add only use sub folder

Mul and Add types where possible (Add for Matrix / Mul and Add for others

filter_and_test sometimes fails

distance methods for ray line line segment

similar to distances, add intersections

implement all operators for vec / pt etc. for both directions Mul<f64> for Foo , Mul<Foo> for f64

maybe more trim().split() usages required

some way to define a prelude or include everything (some files are basically only includes)

support more ply formats or properly throw on error

one of the filter tests managed to fail (possibly race condition within the test files)

mark functions and traits as tested/untested?

transformers as wrappers / intermediate structures

write mesh/PC file type converter program once many IO methods are implemented?

add more combinator filters to the random accessible filters

consider removing the new() from is buildable nd

trait for type with one or many normals (normal() or normal(id))

the filter code is now very generic, consider moving it into its own crate

make the tests folder of the exact same structure and file names as src,
this way it becomes very easy to ensure everything is tested

many tests are missing

make kd-tree n-dimensional   (maybe the octree as well, but might be easier to implement quadtree)

make trees referencing via ids

filters should be directed (this could be dropped and a TransFormed wrapper applied [which inverse transformes incoming points first])

for impls and structs only require as few traits as possible

some structs / traits have 2d/3d specification even if they can only exist in one of the spaces. e.g. filter_circle can't have a 3d version, rename accordingly

write tutorial / examples / example program

try to avoid dynamic traits

outlier removal (filter which holds a kdtree of the reference structure, calc median / medium distance to k-nearest
neighbours remove which are further than x, furthest x percent further than x times
median / average dist...   could take either kdtree or iterator or random access
and be destructible to kdtree)

segmantation detection

IO methods for PC and mesh for all general file formats

octree is missing many query methods
(also implement quad tree once these are implemented)

new filter type for directions/normals or positions & normals
